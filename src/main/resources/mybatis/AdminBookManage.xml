<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xzt.mapper.admin.BookManageMapper">
    <!--标签重用片段-->
    <sql id="t_book_info_select_body">
        from t_book_info
        <where>
            <if test="book_id != null"> book_id = #{bookId} </if>
            <if test="name != null">and name = #{name} </if>
            <if test="author != null">and author = #{author} </if>
            <if test="publish != null">and publish = #{publish} </if>
            <if test="introduction != null">and introduction = #{introduction} </if>
            <if test="language != null">and language = #{language} </if>
            <if test="price != null">and price = #{price} </if>
            <if test="pubdate != null">and pubdate = #{pubdate} </if>
        </where>

    </sql>

    <select id="checkExsistByName" resultType="Integer">
        select count(*) from t_book_info where t_book_info.name = #{bookName}
    </select>

    <update id="updateBookNumberByBookId">
        update t_book_number set number = #{i} where book_id = #{bookId}
    </update>

    <insert id="insertBookNumber">
        insert into t_book_number(book_id,number) values (#{bookId},#{number})
    </insert>

    <insert id="insertBook">
        insert into t_book_info(book_id,name,author,publish,introduction,language,price,pubdate)
        values (#{bookId},#{name},#{author},#{publish},#{introduction},#{language},#{price},#{pubdate})
    </insert>

    <select id="selectBookBy" resultType="com.xzt.entity.TBookInfo">
        select *
        <include refid="t_book_info_select_body"></include>
    </select>

    <select id="selectBookNumByBookId" resultType="Integer">
        select number from t_book_number where book_id = #{bookId}
    </select>

    <select id="getMostId" resultType="Integer">
        select max(book_id) from t_book_number
    </select>

    <insert id="insertBK">
        insert into t_book_class(book_id,class_id) values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.bookId},#{item.classId})
        </foreach>
    </insert>

    <update id="updateBookInfoById">
        update t_book_info
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="author != null">author = #{author}, </if>
            <if test="publish != null">publish = #{publish}, </if>
            <if test="introduction != null">introduction = #{introduction}, </if>
            <if test="language != null">language = #{language}, </if>
            <if test="price != null">price = #{price}, </if>
            <if test="pubdate != null">pubdate = #{pubdate},</if>
        </set>
        where book_id = #{bookId}
    </update>

    <!--删除书籍相关信息-->
    <delete id="deleteBookInfo">
        delete from t_book_info where book_id = #{bookId}
    </delete>

    <delete id="deleteBookClass">
        delete from t_book_class where book_id = #{bookId}
    </delete>

    <delete id="deleteBookNumber">
        delete from t_book_number where book_id = #{bookId}
    </delete>

    <delete id="deletebookRecord">
        delete from t_booking_recornd where book_id = #{bookId}
    </delete>

    <delete id="deleteLendBook">
        delete from t_lend_book where book_id = #{bookId}
    </delete>
</mapper>